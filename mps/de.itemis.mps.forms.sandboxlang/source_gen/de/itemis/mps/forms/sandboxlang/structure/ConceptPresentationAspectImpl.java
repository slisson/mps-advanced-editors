package de.itemis.mps.forms.sandboxlang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Address;
  private ConceptPresentation props_Addresses;
  private ConceptPresentation props_ChineseAddress;
  private ConceptPresentation props_Customer;
  private ConceptPresentation props_GermanAddress;
  private ConceptPresentation props_Item;
  private ConceptPresentation props_Order;
  private ConceptPresentation props_OrderedItem;
  private ConceptPresentation props_RootNode;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Address:
        if (props_Address == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Address");
          props_Address = cpb.create();
        }
        return props_Address;
      case LanguageConceptSwitch.Addresses:
        if (props_Addresses == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Addresses");
          props_Addresses = cpb.create();
        }
        return props_Addresses;
      case LanguageConceptSwitch.ChineseAddress:
        if (props_ChineseAddress == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ChineseAddress");
          props_ChineseAddress = cpb.create();
        }
        return props_ChineseAddress;
      case LanguageConceptSwitch.Customer:
        if (props_Customer == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Customer");
          props_Customer = cpb.create();
        }
        return props_Customer;
      case LanguageConceptSwitch.GermanAddress:
        if (props_GermanAddress == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("GermanAddress");
          props_GermanAddress = cpb.create();
        }
        return props_GermanAddress;
      case LanguageConceptSwitch.Item:
        if (props_Item == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Item");
          props_Item = cpb.create();
        }
        return props_Item;
      case LanguageConceptSwitch.Order:
        if (props_Order == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Order");
          props_Order = cpb.create();
        }
        return props_Order;
      case LanguageConceptSwitch.OrderedItem:
        if (props_OrderedItem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("OrderedItem");
          props_OrderedItem = cpb.create();
        }
        return props_OrderedItem;
      case LanguageConceptSwitch.RootNode:
        if (props_RootNode == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("RootNode");
          props_RootNode = cpb.create();
        }
        return props_RootNode;
    }
    return null;
  }
}
